name: Release Build (Back-end)

on:
  push:
    tags:
      - "back/*.*.*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install & Test
        run: |
          cd back
          npm install
          npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version from Git ref
        id: version
        run: |
          TAG_REF=${GITHUB_REF#refs/tags/back/}
          echo "VERSION=${TAG_REF}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check npm vulnerabilities
        run: |
          cd back
          npm audit --audit-level=high || echo "⚠️ Vulnérabilités détectées, voir logs."

      - name: Build and Push Back-end Image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/store-back:latest
            ${{ secrets.DOCKER_USERNAME }}/store-back:${{ env.VERSION }}
            ${{ secrets.DOCKER_USERNAME }}/store-back:${{ github.sha }}
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            BCRYPT_SALT_ROUNDS=${{ secrets.BCRYPT_SALT_ROUNDS }}

      - name: Scan Docker Image for Vulnerabilities
        if: always()
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ secrets.DOCKER_USERNAME }}/store-back:latest"
          format: "table"
          exit-code: 0